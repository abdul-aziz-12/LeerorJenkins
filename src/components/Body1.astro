
---
type Props = {
  text: string;
};
const { text } = Astro.props;
---


<div class="bg-white w-full h-[1060px]">
  <div class="max-w-7xl mx-auto h-full flex flex-col bg-white">
    <p class="mt-[100px] text-align: left">
        <span class="text-[#440064] font-comic-sans text-[48px] leading-[39px] tracking-[-0.88] inline-block">
        Who is Leeroy Jenkins?
        </span>
    </p>
    
    <div class="flex items-start mt-4">
      <!-- Text Content Container -->
      <div class="w-[752px] h-[600px] opacity-100 text-align: left mt-10">
        <p class="font-comic-sans text-[35px] font-normal leading-[48px] tracking-[0.39px] text-[#242832]">
          In the world of trading, there exists a breed of individuals who embody the spirit of Leeroy Jenkins â€“ the Impulsive Trader. These traders embrace risk with a fervor akin to charging headfirst into battle, their strategies characterized by fearless decision-making and a penchant for unpredictability. Much like Leeroy, their actions can lead to both spectacular wins and catastrophic losses, injecting a dose of chaos into the trading arena.
        </p>
      </div>
      
      <!-- Spacer -->
      <div class="flex-1"></div> <!-- This will create space between text and image -->
    
      <!-- Image Container -->
      <div class="flex-none ml-auto ml-20 w-[501px]">
        <img src="/leeroy.png" class="w-[383px] h-[590px] border-[8px] border-[#440064] border-solid rounded-[5.48px] shadow-[0px 0px 2.74px 0px rgba(0,0,0,0.13), 0px 0px 0px 1.37px rgba(0,0,0,0.2), -11px 12px 13.8px 0px rgba(77,73,184,0.1)]">
      </div>
    </div>

    
  </div>

  
<!--Images -->
<div class="grid grid-cols-9 gap-0">
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/1.png" alt="Image 1" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/2.png" alt="Image 2" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/3.png" alt="Image 3" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/4.png" alt="Image 4" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/5.png" alt="Image 5" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/6.png" alt="Image 6" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/7.png" alt="Image 7" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
  
  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/8.png" alt="Image 8" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>

  <div class="relative w-full h-[200px] overflow-hidden">
    <img src="/9.png" alt="Image 9" class="absolute inset-0 w-full h-full object-center object-cover">
  </div>
</div>


<div class="relative w-full h-[1081px] md:h-[1081px] xl:h-[1081px] bg-purple-600">
  <!-- Background Image -->
  <div class="absolute inset-0 bg-cover bg-center" style="background-image: url('/chain.jpg'); opacity: 0.65;"></div>

  <!-- Content Container (Centered Flexbox) -->
  <div class="absolute inset-0 flex items-center justify-center">
    <!-- Text Container -->
    <div class="max-w-[816px] md:max-w-[687.67px] xl:max-w-[816px] p-4">
      <p class="font-comic-sans text-white text-[32px] font-normal leading-[48px] tracking-[0.39px] text-left">
        I am the essence of generations past, the legacy of your forebears. I am more than just a token; I am a movement, pulsating within the hearts of traders worldwide. Despite my rich mindset, I dwell in the realm of poverty, yearning to break free from the shackles of generational curses. My destination? A staggering 10 billion and beyond. If you resonate with my story, then you need to make me yours. You can acquire me in bundles of 1200, fairly launched without rigging or deceit. Born into this world in 2005, I've weathered the storms and emerged as an OG, seasoned with experience and wisdom. Fearless and charismatic, I defy the odds at every turn. So, keep me close, hold me in your bags, for together, we shall journey to the other side and claim our rightful place among the stars.
      </p>
    </div>


      <!-- Image Container -->
      <div class="max-w-[501px] md:max-w-[687.67px] xl:max-w-[687.67px]">
        <img src="/10.png" alt="Adjustable Image" class="w-full h-auto">
      </div>
  </div>
</div>

<div class="relative h-[1100px] bg-white flex justify-center items-center ">
  <img src="/11.png" alt="Image 11" style="width: 82%; height: 1000px; border: 2px solid black; opacity: 1; background-color: #ffffff; box-shadow: 0px 0px 60px 50px rgba(68, 0, 100, 0.24);">
</div>


<div class="bg-purple-600 relative w-full h-[1100px] md:h-[804px] xl:h-[804px]">
  <!-- Background -->
  <div class="absolute inset-0 bg-[#F2DDFC]"></div>
  

  <div class="relative" style="width: 79.16px; height: 64px; position: absolute; top: 18px; left: 103.49px; gap: 0px;">
    <img src="/12.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 58.13px; height: 47px; position: absolute; top: 67px; left: 183px; gap: 0px;">
    <img src="/13.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 33.39px; height: 27px; position: absolute; top: 114px; left: 255px; gap: 0px;">
    <img src="/13.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 238.4px; height: 276.1px; position: absolute; top: 61px; right: 31px; gap: 0px;">
    <img src="/15.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 198px; height: 229px; position: absolute; top: 170px; left: 200px; gap: 0px;">
    <img src="/16.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 188px; height: 94px; position: absolute; top: 275px; left: 410px; gap: 0px;">
    <img src="/17.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 300px; height: 300px; position: absolute; top: 400px; right: 350px; gap: 0px;">
    <img src="/21.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 516px; height: 682px; position: absolute; top: 61px; left: 600px; gap: 0px;" id="imageContainer">
    <img src="/18.png" alt="Your Image" class="w-full h-full object-cover" id="imageButton">
  </div>

  <div class="relative" style="width: 223px; height: 244px; position: absolute; top: 450px; left: 185px; gap: 0px;">
    <img src="/19.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

  <div class="relative" style="width: 300px; height: 40px; position: absolute; top: 720px; left: 150px; gap: 0px;">
    <img src="/20.png" alt="Your Image" class="w-full h-full object-cover">
  </div>

   

</div>

<!-- Main Content -->
<div class="relative" style="width: 100%; height: 1000px; position: absolute; top: 4970px; gap: 0px; display: flex; justify-content: center; align-items: center; background-color: #ffffff;">
  <img src="/22.png" alt="Your Image" style="width: auto; height: 804px; object-fit: cover; border: 2px solid black; opacity: 1; background-color: #ffffff; box-shadow: 0px 0px 60px 50px rgba(68, 0, 100, 0.24);" id="triggerImage">
</div>


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Button with Dialogue Box and Close Icon</title>
  <!-- Include Tailwind CSS from CDN -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <!-- Include Font Awesome for icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
  <style>
    .dialog {
      width: 500px; /* Adjust as needed */
      max-width: 90%;
    }
  </style>
</head>
<body>

<!-- Dialog box markup -->
<div id="dialog" class="dialog fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-6 border border-gray-300 shadow-lg rounded-lg hidden">
  <!-- Close button -->
  <button id="closeButton" class="absolute top-3 right-3 text-gray-500 hover:text-gray-700">
    <i class="fas fa-times"></i>
  </button>

  <form id="inputForm" class="input-form max-w-md mx-auto">
    <label for="input1" class="block mb-2">Enter your username:</label>
    <input type="text" id="input1" name="input1" class="block w-full px-3 py-2 border border-gray-300 rounded mb-3" required>
    <label for="input2" class="block mb-2">Enter the amount of Leeroy Tokens you hold:</label>
    <input type="number" id="input2" name="input2" class="block w-full px-3 py-2 border border-gray-300 rounded mb-3" required>
    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Submit</button>
  </form>

  <!-- Output section -->
  <div id="output" class="mt-4 hidden">
    <h2 class="text-lg font-semibold mb-2" id="outputHeader"></h2>
    <ul id="outputList"></ul>
    <p id="outputMessage" class="mt-4"></p>
  </div>
</div>

<!-- JavaScript to handle dialog functionality -->
<script>
 document.addEventListener('DOMContentLoaded', function() {
  const dialog = document.getElementById('dialog');
  const closeButton = document.getElementById('closeButton');
  const inputForm = document.getElementById('inputForm') as HTMLFormElement;
  const outputSection = document.getElementById('output');
  const outputHeader = document.getElementById('outputHeader');
  const outputList = document.getElementById('outputList');
  const outputMessage = document.getElementById('outputMessage');

  if (!dialog || !closeButton || !inputForm || !outputSection || !outputHeader || !outputList || !outputMessage) {
    console.error('One or more required elements not found.');
    return;
  }

  // Assuming 'imageButton' is defined somewhere in your HTML
  const imageButton = document.getElementById('imageButton');
  if (imageButton) {
    imageButton.addEventListener('click', function() {
      dialog.classList.remove('hidden');
    });
  }

  closeButton.addEventListener('click', function() {
    dialog.classList.add('hidden');
    inputForm.reset();
    outputSection.classList.add('hidden');
  });

  dialog.addEventListener('click', function(event) {
    if (event.target === dialog) {
      dialog.classList.add('hidden');
      inputForm.reset();
      outputSection.classList.add('hidden');
    }
  });

  inputForm.addEventListener('submit', function(event) {
    event.preventDefault();

    const input1Value = (document.getElementById('input1') as HTMLInputElement).value;
    const input2Value = parseFloat((document.getElementById('input2') as HTMLInputElement).value);

    if (isNaN(input2Value) || input2Value <= 0) {
      alert('Please enter a valid number of tokens.');
      return;
    }

    let tokensValue = input2Value;
    let outputHtml = '';

    for (let i = 1; i <= 6; i++) {
      outputHtml += `<li>${i} month will be ${tokensValue.toLocaleString()} USD</li>`;
      tokensValue *= 10;
    }

    outputHeader.textContent = `Hey ${input1Value}! If you hold ${input2Value.toLocaleString()} tokens now, your tokens value in:`;
    outputList.innerHTML = outputHtml;
    outputMessage.textContent = `And rise exponentially in the next 10 years. You are on your way to becoming a billionaire!`;

    outputSection.classList.remove('hidden');
  });
});

</script>

</body>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Emotion Adjustment</title>
  <!-- Tailwind CSS -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <!-- Font Awesome for icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

  <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>

  <!-- Custom styles -->
  <style>
    /* Additional custom styles */
    .dialog2 {
      width: 70%;
    }

    .emotion-button {
      cursor: pointer;
    }

    .image-preview {
      max-height: 500px;
      object-fit: contain;
    }
  </style>
</head>
<body class="bg-white">

<!-- Dialog2 box section -->
<div id="dialog2" class="dialog2 fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-6 border border-gray-300 shadow-lg rounded-lg hidden">
  <button id="closeButton2" class="absolute top-3 right-3 text-gray-500 hover:text-gray-700">
    <i class="fas fa-times"></i>
  </button>

  <!-- Image upload form -->
  <form id="uploadForm" class="max-w-md mx-auto">
    <label for="uploadedImage" class="block mb-2">Upload your image:</label>
    <input type="file" id="uploadedImage" name="uploadedImage" accept="image/*" class="block w-full px-3 py-2 border border-gray-300 rounded mb-3" required>
  </form>

  <!-- Emotion selection -->
  <div class="flex justify-between items-center mt-4 mb-8">
    <p class="text-gray-700">Select an emotion:</p>
    <div id="emotionButtons" class="flex gap-2">
      <!-- Emotion buttons will be dynamically added here -->
    </div>
  </div>

  <!-- Image display and adjustment -->
  <div class="relative">
    <img id="uploadedPreview" src="" alt="Uploaded Image Preview" class="w-full h-auto rounded-lg shadow-lg mb-4 image-preview">
    <img id="emotionOverlay" src="" alt="Emotion Overlay" class="absolute inset-0 w-full h-full object-cover rounded-lg shadow-lg hidden">
  </div>

  <!-- Download button -->
  <div class="flex justify-center mt-8">
    <a id="downloadButton" href="#" download="adjusted_image.png" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 hidden">Download Your Suit</a>
  </div>
</div>

<!-- JavaScript -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const Dialog2 = document.getElementById('dialog2');
    const closeButton2 = document.getElementById('closeButton2');
    const uploadForm = document.getElementById('uploadForm');
    const uploadedImage = document.getElementById('uploadedImage') as HTMLInputElement;
    const emotionButtons = document.getElementById('emotionButtons');
    const uploadedPreview = document.getElementById('uploadedPreview') as HTMLImageElement;
    const emotionOverlay = document.getElementById('emotionOverlay') as HTMLImageElement;
    const downloadButton = document.getElementById('downloadButton') as HTMLAnchorElement;

    const emotions = [
      'contentment', 'hope', 'regret', 'anxiety', 'confidence',
      'fomo', 'greed', 'impatience', 'panic', 'relief'
    ];

    // Dynamically create emotion buttons
    emotions.forEach(emotion => {
      const button = document.createElement('button');
      button.textContent = emotion.charAt(0).toUpperCase() + emotion.slice(1); // Capitalize first letter
      button.className = 'emotion-button bg-gray-300 hover:bg-gray-400 px-3 py-1 rounded';
      button.addEventListener('click', () => selectEmotion(emotion));
      emotionButtons?.appendChild(button); // Optional chaining to handle potential null

      // Show dialog2 box when main image is clicked
      const mainImage = document.querySelector('#triggerImage');
      mainImage?.addEventListener('click', function () {
        Dialog2?.classList.remove('hidden');
        resetDialog2();
      });

      // Close2 dialog2 box when close2 button is clicked
      closeButton2?.addEventListener('click', function () {
        Dialog2?.classList.add('hidden');
        resetDialog2();
      });


      // Handle file upload and preview
      uploadedImage?.addEventListener('change', function () {
        const file = this.files?.[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function () {
            uploadedPreview.src = reader.result as string;
          };
          reader.readAsDataURL(file);
        }
      });

      // Select emotion and update UI
      function selectEmotion(emotion: string) {
        emotionOverlay.src = `/path/to/${emotion}.png`; // Replace with actual path to emotion images
        emotionOverlay.classList.remove('hidden');
        downloadButton?.classList.remove('hidden');
        updateDownloadLink();
      }

      // Update download button URL based on current selection
      function updateDownloadLink() {
        downloadButton.href = emotionOverlay.src;
      }

      // Reset dialog2 to initial state
      function resetDialog2() {
        uploadForm?.reset();
        uploadedPreview.src = '';
        emotionOverlay.classList.add('hidden');
        downloadButton?.classList.add('hidden');
        downloadButton.removeAttribute('href');
      }
    });
  });
</script>

</body>
</html>
